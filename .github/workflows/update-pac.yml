# .github/workflows/update-pac.yml
name: Update PAC File

on:
  schedule:
    - cron: "19 * * * *"
    # - cron: "43 * * * *" # Keep only one hourly job
  workflow_dispatch:

permissions:
  contents: write  # Required to push (whether on this branch or on other branches)

concurrency:
  group: pac-update
  cancel-in-progress: true  # True to cancel ongoing runs instead of queuing them

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests

      - name: Run generate_pac.py to generate PAC file
        run: python generate_pac.py

      - name: Prepare pac-branch contents
        run: |
          mkdir temp
          cp proxy.pac temp/
          cp .htaccess temp/
      
      - name: Push to pac-branch (force, squash history)
        run: |
          cd temp
          git init
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

          # Add current pac-branch as remote and fetch it. This part added to preserve Readme & .nojekyll.
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch origin pac-branch || true  # Continue even if branch doesn't exist

          # Try to restore README.md & .nojekyll if they exists
          git checkout origin/pac-branch -- README.md .nojekyll || true
          
          git add .
          git commit -m "Update PAC and .htaccess"
          git branch -M pac-branch
          # Commented because the first occurrence is sufficient
          # git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push --force origin pac-branch